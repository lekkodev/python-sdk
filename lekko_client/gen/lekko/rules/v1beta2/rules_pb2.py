# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lekko/rules/v1beta2/rules.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1flekko/rules/v1beta2/rules.proto\x12\x13lekko.rules.v1beta2\x1a\x1cgoogle/protobuf/struct.proto\"\xec\x01\n\x04Rule\x12/\n\x04\x61tom\x18\x01 \x01(\x0b\x32\x19.lekko.rules.v1beta2.AtomH\x00R\x04\x61tom\x12-\n\x03not\x18\x02 \x01(\x0b\x32\x19.lekko.rules.v1beta2.RuleH\x00R\x03not\x12W\n\x12logical_expression\x18\x03 \x01(\x0b\x32&.lekko.rules.v1beta2.LogicalExpressionH\x00R\x11logicalExpression\x12\x1f\n\nbool_const\x18\x04 \x01(\x08H\x00R\tboolConst:\x02\x18\x01\x42\x06\n\x04rule\"\xde\x01\n\x11LogicalExpression\x12\x38\n\nfirst_rule\x18\x01 \x01(\x0b\x32\x19.lekko.rules.v1beta2.RuleR\tfirstRule\x12:\n\x0bsecond_rule\x18\x02 \x01(\x0b\x32\x19.lekko.rules.v1beta2.RuleR\nsecondRule\x12O\n\x10logical_operator\x18\x03 \x01(\x0e\x32$.lekko.rules.v1beta2.LogicalOperatorR\x0flogicalOperator:\x02\x18\x01\"\xc8\x01\n\x04\x41tom\x12\x1f\n\x0b\x63ontext_key\x18\x01 \x01(\tR\ncontextKey\x12\x41\n\x10\x63omparison_value\x18\x02 \x01(\x0b\x32\x16.google.protobuf.ValueR\x0f\x63omparisonValue\x12X\n\x13\x63omparison_operator\x18\x03 \x01(\x0e\x32\'.lekko.rules.v1beta2.ComparisonOperatorR\x12\x63omparisonOperator:\x02\x18\x01*\xb8\x03\n\x12\x43omparisonOperator\x12#\n\x1f\x43OMPARISON_OPERATOR_UNSPECIFIED\x10\x00\x12\x1e\n\x1a\x43OMPARISON_OPERATOR_EQUALS\x10\x01\x12!\n\x1d\x43OMPARISON_OPERATOR_LESS_THAN\x10\x02\x12+\n\'COMPARISON_OPERATOR_LESS_THAN_OR_EQUALS\x10\x03\x12$\n COMPARISON_OPERATOR_GREATER_THAN\x10\x04\x12.\n*COMPARISON_OPERATOR_GREATER_THAN_OR_EQUALS\x10\x05\x12(\n$COMPARISON_OPERATOR_CONTAINED_WITHIN\x10\x06\x12#\n\x1f\x43OMPARISON_OPERATOR_STARTS_WITH\x10\x07\x12!\n\x1d\x43OMPARISON_OPERATOR_ENDS_WITH\x10\x08\x12 \n\x1c\x43OMPARISON_OPERATOR_CONTAINS\x10\t\x12\x1f\n\x1b\x43OMPARISON_OPERATOR_PRESENT\x10\n\x1a\x02\x18\x01*j\n\x0fLogicalOperator\x12 \n\x1cLOGICAL_OPERATOR_UNSPECIFIED\x10\x00\x12\x18\n\x14LOGICAL_OPERATOR_AND\x10\x01\x12\x17\n\x13LOGICAL_OPERATOR_OR\x10\x02\x1a\x02\x18\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'lekko.rules.v1beta2.rules_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _COMPARISONOPERATOR._options = None
  _COMPARISONOPERATOR._serialized_options = b'\030\001'
  _LOGICALOPERATOR._options = None
  _LOGICALOPERATOR._serialized_options = b'\030\001'
  _RULE._options = None
  _RULE._serialized_options = b'\030\001'
  _LOGICALEXPRESSION._options = None
  _LOGICALEXPRESSION._serialized_options = b'\030\001'
  _ATOM._options = None
  _ATOM._serialized_options = b'\030\001'
  _globals['_COMPARISONOPERATOR']._serialized_start=754
  _globals['_COMPARISONOPERATOR']._serialized_end=1194
  _globals['_LOGICALOPERATOR']._serialized_start=1196
  _globals['_LOGICALOPERATOR']._serialized_end=1302
  _globals['_RULE']._serialized_start=87
  _globals['_RULE']._serialized_end=323
  _globals['_LOGICALEXPRESSION']._serialized_start=326
  _globals['_LOGICALEXPRESSION']._serialized_end=548
  _globals['_ATOM']._serialized_start=551
  _globals['_ATOM']._serialized_end=751
# @@protoc_insertion_point(module_scope)
